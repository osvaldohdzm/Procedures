\begin{Verbatim}[commandchars=\\\{\}]
	\PYG{k+kd}{const} \PYG{n+nx}{WebSocket} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}ws\PYGZsq{}}\PYG{p}{);}
	\PYG{k+kd}{const} \PYG{n+nx}{net} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}net\PYGZsq{}}\PYG{p}{);}
	\PYG{k+kd}{const} \PYG{n+nx}{wss} \PYG{o}{=} \PYG{o+ow}{new} \PYG{n+nx}{WebSocket}\PYG{p}{.}\PYG{n+nx}{Server}\PYG{p}{(\PYGZob{}} \PYG{n+nx}{port}\PYG{o}{:} \PYG{l+m+mf}{3000} \PYG{p}{\PYGZcb{},} \PYG{k+kd}{function} \PYG{p}{()} \PYG{p}{\PYGZob{}}
	  \PYG{k+kd}{const} \PYG{n+nx}{payload} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}constructor\PYGZsq{}}\PYG{p}{;}  \PYG{c+c1}{// or \PYGZsq{},;constructor\PYGZsq{}}
	\PYG{k+kd}{const} \PYG{n+nx}{request} \PYG{o}{=} \PYG{p}{[}
		\PYG{l+s+s1}{\PYGZsq{}GET / HTTP/1.1\PYGZsq{}}\PYG{p}{,}
		\PYG{l+s+s1}{\PYGZsq{}Connection: Upgrade\PYGZsq{}}\PYG{p}{,}
		\PYG{l+s+s1}{\PYGZsq{}Sec\PYGZhy{}WebSocket\PYGZhy{}Key: test\PYGZsq{}}\PYG{p}{,}
		\PYG{l+s+s1}{\PYGZsq{}Sec\PYGZhy{}WebSocket\PYGZhy{}Version: 8\PYGZsq{}}\PYG{p}{,}
		\PYG{l+s+sb}{`Sec\PYGZhy{}WebSocket\PYGZhy{}Extensions: }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{payload}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{,}
		\PYG{l+s+s1}{\PYGZsq{}Upgrade: websocket\PYGZsq{}}\PYG{p}{,}
		\PYG{l+s+s1}{\PYGZsq{}\PYGZbs{}r\PYGZbs{}n\PYGZsq{}}
	  \PYG{p}{].}\PYG{n+nx}{join}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZbs{}r\PYGZbs{}n\PYGZsq{}}\PYG{p}{);}
	\PYG{k+kd}{const} \PYG{n+nx}{socket} \PYG{o}{=} \PYG{n+nx}{net}\PYG{p}{.}\PYG{n+nx}{connect}\PYG{p}{(}\PYG{l+m+mf}{3000}\PYG{p}{,} \PYG{k+kd}{function} \PYG{p}{()} \PYG{p}{\PYGZob{}}
		\PYG{n+nx}{socket}\PYG{p}{.}\PYG{n+nx}{resume}\PYG{p}{();}
		\PYG{n+nx}{socket}\PYG{p}{.}\PYG{n+nx}{write}\PYG{p}{(}\PYG{n+nx}{request}\PYG{p}{);}
	  \PYG{p}{\PYGZcb{});}
	\PYG{p}{\PYGZcb{});}
\end{Verbatim}
